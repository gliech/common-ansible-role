---
- name: Set SELinux context for the .ssh directory
  community.general.sefcontext:
    target: "{{ common_agent_user_home }}/\\.ssh(/.*)?"
    setype: ssh_home_t
    state: present
  become: yes
  register: common_ssh_secontext
  when: ansible_selinux.status == 'enabled'

- name: Apply SELinux context to existing files
  ansible.builtin.command: "restorecon -vr {{ common_agent_user_home }}/.ssh"
  args:
    # This task does not really remove the .ssh directory. But this is a very
    # convenient way to ensure this command is only run when the files exist on
    # the remote machine.
    removes: "{{ common_agent_user_home }}/.ssh"
  become: yes
  when: common_ssh_secontext.changed  # noqa no-handler

- name: Assemble ssh config
  run_once: yes
  delegate_to: localhost
  tags:
    - ssh-keys
  block:
    - name: Create a temporary file on localhost
      ansible.builtin.tempfile:
        state: file
      register: admin_keys_file
      changed_when: false

    - name: Add ssh public keys of admins to said file
      ansible.builtin.assemble:
        src: files/admin-keys
        regexp: '.*\.pub'
        dest: "{{ admin_keys_file.path }}"
        mode: 0600
        validate: 'ssh-keygen -lf %s'
      changed_when: false

- name: Add admin keys to the ansible user ssh config
  ansible.posix.authorized_key:
    user: "{{ common_agent_user_name }}"
    key: "{{ lookup('file', admin_keys_file.path) }}"
    exclusive: yes
    state: present
  become: yes
  tags:
    - ssh-keys
